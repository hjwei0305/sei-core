<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <include resource="logback-default.xml" />
    <include resource="logback-console.xml" />

    <!-- 读取当前应用Environment中的属性. 读取application.yml中的值 -->
    <springProperty scope="context" name="bootstrapServers" source="spring.kafka.bootstrap-servers" defaultValue="localhost:9092"/>
    <springProperty scope="context" name="IP" source="spring.cloud.client.ipAddress" />

    <!-- kafka的appender配置 -->
    <appender name="kafkaAppender" class="com.github.danielwegener.logback.kafka.KafkaAppender">
        <encoder charset="UTF-8" class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "timestamp": "%d{yyyy-MM-dd'T'HH:mm:ss.SSSZ}",
                        "traceId": "%X{traceId:-}",
                        "token" : "%X{x-authorization:-}",
                        "pid": "${PID:- }",
                        "logger": "%logger",
                        "level": "%p",
                        "message": "%msg",
                        "host": "${IP}",
                        "serverName": "${APP_NAME}",
                        "stackTrace": "%ex"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
        <topic>SeiLoggerPlatform</topic>
        <!-- we don't care how the log messages will be partitioned  -->
        <keyingStrategy class="com.github.danielwegener.logback.kafka.keying.NoKeyKeyingStrategy" />

        <!-- use async delivery. the application threads are not blocked by logging -->
        <deliveryStrategy class="com.github.danielwegener.logback.kafka.delivery.AsynchronousDeliveryStrategy" />

        <!-- each <producerConfig> translates to regular kafka-client config (format: key=value) -->
        <!-- producer configs are documented here: https://kafka.apache.org/documentation.html#newproducerconfigs -->
        <!-- bootstrap.servers is the only mandatory producerConfig -->
        <producerConfig>bootstrap.servers=${bootstrapServers}</producerConfig>
        <!-- don't wait for a broker to ack the reception of a batch.  -->
        <producerConfig>acks=0</producerConfig>
        <!-- wait up to 1000ms and collect log messages before sending them as a batch -->
        <producerConfig>linger.ms=1000</producerConfig>
        <!-- even if the producer buffer runs full, do not block the application but start to drop messages -->
        <producerConfig>max.block.ms=0</producerConfig>
        <!-- define a client-id that you use to identify yourself against the kafka broker -->
        <producerConfig>client.id=${HOSTNAME}-${CONTEXT_NAME}-logback-relaxed</producerConfig>
    </appender>



    <!-- 日志输出级别 -->
    <root level="DEBUG">
        <appender-ref ref="CONSOLE"/>

        <appender-ref ref="kafkaAppender"/>
    </root>

</configuration>
