apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // 内部模块依赖
    compile project(':sei-core-api')
    compile project(':sei-commons')
    compile project(':sei-cache')
    compile project(':sei-core-entity3')
    compile project(':sei-core-monitor')
    compile project(':sei-limiter')

    // 第三方的依赖
    compile(
            "org.springframework.boot:spring-boot-starter-data-jpa",
            // 支持java8 日期类型
            "org.hibernate:hibernate-java8:$hibernateVersion",
            // po与dto对象转换工具
            "org.modelmapper:modelmapper:$modelmapperVersion",
            // swagger
            "io.springfox:springfox-swagger2:$foxSwaggerVersion",
//            "com.github.xiaoymin:swagger-bootstrap-ui:1.9.6",
            "com.github.xiaoymin:knife4j-spring-boot-starter:2.0.2",

            "joda-time:joda-time:$jodaTimeVersion"
    )

    // logback <if>标签
    // compile("org.codehaus.janino:janino:3.1.0")

    testCompile(
            "org.springframework.boot:spring-boot-starter-test"
    )
}

//打jar包
bootJar { enabled = false }
jar {
    enabled = true
    manifest {
        attributes("Manifest-Version": "6.0")
        attributes("Created-By": "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString())
        attributes("Implementation-Title": "SEI-$project.name")
        attributes("Implementation-Version": "$project.version")
        attributes("Implementation-Vendor": "rcsit.cn")
        attributes("Build-Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
    }
}

/////////////////////////////////////上传Maven仓库////////////////////////////////////////
// 打包源代码
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

// 如果希望gradle install，安装到.m2本地仓库，参考下面的内容
install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$project.name"
        pom.groupId = "$project.group"
    }
}

//上传到nexus
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: MAVEN_REPO_URL) {
                authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
            }
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"
        }
    }
    return 'Success'
}